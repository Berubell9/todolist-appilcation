name: Quality Gate + Build & Push

on:
  push:
    branches: [main]

jobs:
  # ==============================================================
  # ‚úÖ 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û (Lint + Build + Test)
  # ==============================================================
  test-quality:
    name: Lint ‚Ä¢ Build ‚Ä¢ Test
    runs-on: ubuntu-latest

    # ‡πÄ‡∏û‡∏¥‡πà‡∏° MySQL Service ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Backend
    services:
      mysql:
        image: mysql:8.4
        env:
          MYSQL_ROOT_PASSWORD: rootStrong123
          MYSQL_DATABASE: todo_app
          MYSQL_USER: appuser
          MYSQL_PASSWORD: appPass123
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=5s --health-timeout=3s --health-retries=30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            my-app/package-lock.json
            api/package-lock.json

      # ---------- Frontend ----------
      - name: Install deps (frontend)
        working-directory: ./my-app
        run: npm ci

      - name: Lint (frontend)
        working-directory: ./my-app
        run: npm run lint --if-present

      - name: Build (frontend)
        working-directory: ./my-app
        env:
          NEXT_PUBLIC_API_BASE_URL: http://localhost:5000
        run: npm run build

      - name: Test (frontend)
        working-directory: ./my-app
        run: npm test --if-present -- --ci

      # ---------- Backend ----------
      - name: Install deps (backend)
        working-directory: ./api
        run: npm ci

      - name: Wait for DB healthy & seed schema
        run: |
          sudo apt-get update && sudo apt-get install -y mysql-client
          # ‡∏£‡∏≠‡∏à‡∏ô MySQL ‡∏û‡∏£‡πâ‡∏≠‡∏° (‡∏Å‡∏±‡∏ô timing issue)
          for i in {1..40}; do
            mysqladmin ping -h 127.0.0.1 -uroot -prootStrong123 && break
            echo "‚è≥ waiting for mysql..."; sleep 2
          done
          mysql -h 127.0.0.1 -P 3306 -uappuser -pappPass123 todo_app < ./sql/schema.sql

      - name: Lint (backend)
        working-directory: ./api
        run: npm run lint --if-present

      - name: Build (backend)
        working-directory: ./api
        run: npm run build 

      - name: Test (backend)
        working-directory: ./api
        env:
          NODE_ENV: test
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_USER: appuser
          DB_PASSWORD: appPass123
          DB_NAME: todo_app
        run: npm test --if-present -- --ci

  # ==============================================================
  # üê≥ 2. Build & Push Docker images ‚Üí NIPA Cloud
  # ==============================================================
  build-and-push:
    name: Build & Push to NIPA Registry
    runs-on: ubuntu-latest
    needs: test-quality  # ‚úÖ ‡∏à‡∏∞‡∏£‡∏±‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # Login to NIPA Cloud Registry
      - name: Login to NIPA Cloud Registry
        uses: docker/login-action@v3
        with:
          registry: registry.nipa.cloud
          username: ${{ secrets.NIPA_USERNAME }}
          password: ${{ secrets.NIPA_PASSWORD }}

      # Build & Push Frontend
      - name: Build and Push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./my-app
          file: ./my-app/Dockerfile
          push: true
          tags: registry.nipa.cloud/lun-test/frontend:1.0.0

      # Build & Push Backend
      - name: Build and Push Backend
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ./api/Dockerfile
          push: true
          tags: registry.nipa.cloud/lun-test/backend:1.0.0